package cz.schlosserovi.tomas.drooms.strategy

import org.slf4j.Logger
import java.util.ArrayList
import java.util.Random

import cz.schlosserovi.tomas.drooms.strategy.domain.collectibles.*
import cz.schlosserovi.tomas.drooms.strategy.domain.collision.*;
import cz.schlosserovi.tomas.drooms.strategy.domain.history.*
import cz.schlosserovi.tomas.drooms.strategy.domain.status.*
import cz.schlosserovi.tomas.drooms.strategy.domain.*

import org.drooms.api.*
import org.drooms.impl.logic.*
import org.drooms.impl.logic.facts.*
import org.drooms.impl.logic.events.*

global Logger logger
global PathTracker tracker

declare entry-point gameEvents end
declare entry-point rewardEvents end
declare entry-point playerEvents end


rule "Add extra priority to straight moves"
    salience 5
    when
        CurrentTurn($turn : number)
        PastMove(turn == ($turn - 1), move != Move.STAY, $past : move)
        $move : PriorityMove(move == $past)
    then
        modify($move) {
            addPriority(1000)
        }
end

rule "Insert priority move for every collectible"
    when
        Status($position : position)
        $col : PositionedCollectible()
    then
        insertLogical(new PriorityMove($position, $col.getFirstStep(),
            Functions.getPriority($col.getCollectible().getPoints(), $col.getDistance())));
end
